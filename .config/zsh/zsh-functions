# Function to source files if they exist
function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && zcompare_source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}

# Search for files and directories then cd or edit them.
function s() {
  local ignore_file="\.png$|LICENSE|README|\.jpg$|\.pdf$"
  local ignore_dir=".*local/share|.*local/lib|.*clj-kondo/.cache|.*dotfiles/.config/zsh/plugins|.*git|.*awesome/lain|.*awesome/freedesktop|.*ccls-cache"
  local result=$(find "$DOTFILESDIR"  \( -regextype posix-egrep -regex "$ignore_dir" \) -prune -o -print \
                    | grep -E -v "$ignore_file" \
                    | fzf --layout=reverse --height=1%) 
  [ -z "$result" ] && return

  if [[ -d "$result" ]]; then
    cd "$result" && print -s cd "$result"
  else
    "$EDITOR" "$result" && print -s "$EDITOR" "$result"
  fi
}


function so() {
  local ignore_dir=".*zig-cache|.*zig-out"
  local result=$(find  "$HOME/personal"  \( -regextype posix-egrep -regex "$ignore_dir" \) -prune -o -print \
                  | fzf --layout=reverse --height=1%) 
  [ -z "$result" ] && return

  if [[ -d "$result" ]]; then
    cd "$result" && print -s cd "$result"
  else
    "$EDITOR" "$result" && print -s "$EDITOR" "$result"
  fi
}

function se() {
  local result=$(find "$(pwd)" -name ".git" -prune -o -print  | fzf --layout=reverse --height=1%) 

  [ -z "$result" ] && return
  if [[ -d "$result" ]]; then
    cd "$result" && print -s cd "$result"
  else
    "$EDITOR" "$result" && print -s "$EDITOR" "$result"
  fi
}

function ss() {
  local result=$(find "$HOME" -name ".git" -prune -o -print  | fzf --layout=reverse --height=1%) 

  [ -z "$result" ] && return
  if [[ -d "$result" ]]; then
    cd "$result" && print -s cd "$result"
  else
    "$EDITOR" "$result" && print -s "$EDITOR" "$result"
  fi
}

function mc() {
  mkdir -p "$1" && cd "$1"
}
