# to source files if they exist

function zsh_add_file() {
    [ -f "$ZDOTDIR/$1" ] && zcompare_source "$ZDOTDIR/$1"
}

function zsh_add_plugin() {
    PLUGIN_NAME="$2"
    if [ -z "$PLUGIN_NAME" ]; then
        PLUGIN_NAME="$(echo $1 | cut -d "/" -f 2)"
    fi

    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For plugins
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.zsh" || \
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.sh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
    fi
}

function zsh_add_completion() {
    PLUGIN_NAME=$(echo $1 | cut -d "/" -f 2)
    if [ -d "$ZDOTDIR/plugins/$PLUGIN_NAME" ]; then 
        # For completions
		completion_file_path=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
		fpath+="$(dirname "${completion_file_path}")"
        zsh_add_file "plugins/$PLUGIN_NAME/$PLUGIN_NAME.plugin.zsh"
    else
        git clone "https://github.com/$1.git" "$ZDOTDIR/plugins/$PLUGIN_NAME"
		fpath+=$(ls $ZDOTDIR/plugins/$PLUGIN_NAME/_*)
        [ -f $ZDOTDIR/.zccompdump ] && $ZDOTDIR/.zccompdump
    fi
	completion_file="$(basename "${completion_file_path}")"
	if [ "$2" = true ] && compinit "${completion_file:1}"
}

################################################################################
# find functions

function open_or_cd() {
    [ -z "$1" ] && return

    if [ -d "$1" ]; then
        cd "$1" && print -s cd "$1"
    else
        open.sh "$1" && print -s "open.sh" "$1"
    fi
}

# Search for files and directories then cd or edit them.
function sa() {
    open_or_cd "$(find.sh get dotfiles)"
}

function sr() {
    open_or_cd "$(find.sh get personal)"
}

function se() {
    open_or_cd "$(find.sh get cwd)"
}

function st() {
    open_or_cd "$(find.sh get home)"
}

function ss() {
    open_or_cd "$(find.sh get root)"
}

function sp() {
    open_or_cd "$(find.sh get prog)"
}

# find functions
################################################################################

function mc() {
  mkdir -p "$1" && cd "$1"
}

function preexec_hook_for_compile() {
    # For preexec hooks the whole command will be passed as a single argument in
    # (from zsh docs)
    # $1: The command as typed by the user
    # $2: A single-line, size-limited version of the command (with things like function bodies elided)
    # $3: Contains the full text that is being executed. 
    if command -v compile-cmds.sh > /dev/null; then
        compile-cmds.sh add_from_list "$1" > /dev/null
    else
        echo "Couldn't find compile-cmds"
    fi
}
